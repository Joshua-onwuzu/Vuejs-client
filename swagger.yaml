swagger: "2.0"
info:
  description: "This is a simple express server for managing clients"
  version: "1.0.0"
  title: "Client"
host: "localhost:3000"
basePath: "/api"
tags:
- name: "clients"
  description: "Managing clients"
schemes:
- "http"
paths:
  /client:
    get:
      tags:
      - "clients"
      summary: "Gets all client"
      description: ""
      operationId: "getClients"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "Internal server error"
  /add-client:
    post:
      tags:
      - "clients"
      summary: "Add clients"
      description: ""
      operationId: "addClient"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Client details to create"
        required: true
        schema:
          $ref: "#/definitions/Client"
      responses:
        "200":
          description: "successful saved client"
        "500" : 
          description : Internal server error        
  /client/{id}:
    get:
      tags:
      - "clients"
      summary: "Find client by id"
      description: ""
      operationId: "getClientById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of client that needs to be fetched"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful fetched client"
        "404":
          description: "Client not found"
  /update/client/{id}:
    post:
      tags:
      - "clients"
      summary: "Updates a client with it id"
      description: ""
      operationId: "FindAndUpdateClientById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in : "path"
        name : "id"
        description: "ID of client that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Give a single client field to be updated"
        required: true
        type: "object"
          
      responses:
        "200":
          description: "successful updated client"
        "400":
          description : "Invalid ID"  
        "500":
          description : "Internal server error"  
  /delete/client/{id}:
    get:
      tags:
      - "clients"
      summary: "Find clients by id and delete"
      description: ""
      operationId: "findClientByIdAndDelete"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Client Id to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "successfully deleted"
        "404":
          description: "unrecognized client id"
  /providers:
    get:
      tags:
      - "clients"
      summary: "Returns all providers"
      description: "Returns an array of providers"
      operationId: "getProvider"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
        "500":
          description : " Internal server error"
  /add-provider:
    post:
      tags:
      - "clients"
      summary: "Add provider"
      description: ""
      operationId: "addProvider"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Provider to be saved"
        required: true
        schema:
          $ref: "#/definitions/Provider"
      responses:
        "200":
          description: "successfully added provider"
        "400":
          description: "Invalid Provider"
  /delete/provider/{id}:
    get:
      tags:
      - "clients"
      summary: "Find provider by id and delete"
      description: ""
      operationId: "findProviderByIdAndDelete"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Provider Id to be deleted"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful deleted a provider"
        "400":
          description: "Invalid ID"

definitions:
  Provider:
    type: "object"
    properties:
      provider:
        type: "string"
    xml:
      name: "Provider"
  Client:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "number"
      providerArray : 
        type: "array"
        items: 
          type : "object"
          properties :
            id:
              type: "string"
            name: 
              type : "string"        
    xml:
      name: "Client"
